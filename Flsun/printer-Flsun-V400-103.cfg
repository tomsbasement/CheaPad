#!Flsun V400
# printer_size: Ï†220x270
# STM32F103. When running "make menuconfig", enable "extra low-level
# configuration setup", select the 28KiB bootloader, and serial (on
# USART3 PB11/PB10) communication.
# Note that the "make flash" command does not work with MKS Robin
# boards. After running "make", run the following command:
#   ./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano35.bin
# Copy the file out/Robin_nano35.bin to an SD card and then restart the
# printer with that SD card.

[include mainsail.cfg]
[include timelapse.cfg]

[display_status]

[mcu rpi]
serial: /tmp/klipper_host_mcu

[stepper_a]
step_pin: PE3
dir_pin: PE2  # motor direction pin,"!PE2" and "PE2" represent different directions
enable_pin: !PE4
microsteps: 16 
rotation_distance: 40 #rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>, 
endstop_pin: ^PA15
#position_endstop: 415 # printer printable height
homing_speed: 40 
#arm_length = 345 

[stepper_b]
step_pin: PE0
dir_pin: PB9  # motor direction pin
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA12
#position_endstop: 415
#arm_length = 345

[stepper_c]
step_pin: PB5
dir_pin: PB4  # motor direction pin
enable_pin: !PB8
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC4
#position_endstop: 415
#arm_length = 345

[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 4.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: -5 # extruder min temp
max_temp: 315 # extruder max temp
max_extrude_cross_section: 50 # default 0.640
max_extrude_only_distance: 500
pressure_advance: 0.02 
#pressure_advance: 0.041
control: pid
pid_Kp: 18.240
pid_Ki: 0.558
pid_Kd: 149.109

[tmc2209 stepper_a]
uart_pin: PD5
run_current: 1.500
# stealthchop_threshold: 999999

[tmc2209 stepper_b]
uart_pin: PD7
run_current: 1.500
# stealthchop_threshold: 999999

[tmc2209 stepper_c]
uart_pin: PD4
run_current: 1.500
# stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PD9
run_current: 0.8
# stealthchop_threshold: 999999
####################################################################################################
#mcu ,pin
####################################################################################################

[mcu]
serial:/dev/serial/by-id/usb_serial_1
restart_method: command

[fan]
pin: PB1

[heater_fan heat_sink_fan] 
pin: PB0
heater_temp: 50.0

[heater_bed]
heater_pin: PA0
sensor_pin: PC0
sensor_type: EPCOS 100K B57560G104F
min_temp: -5
max_temp: 120 #hotbed max temp
control: pid
pid_Kp: 80.041
pid_Ki: 2.422
pid_Kd: 300.123

[temperature_sensor Armv7 mcu] #the temp of pad
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp] #the temp of mcu
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[input_shaper]
shaper_freq_x: 34.78   # frequency for the X mark of the test model
shaper_freq_y: 31.68  # frequency for the Y mark of the test model

[output_pin LED_pin]
pin: PE12
pwm: False
value: 0 # 0 = off ,1 = on
#cycle_time: 0.010

[output_pin LED_logo]
pin: PD11
pwm: False
value: 1
#cycle_time: 0.010

[filament_switch_sensor filament_sensor]  
pause_on_runout: True
runout_gcode: PAUSE # pause when filament runout
#insert_gcode: RESUME  
switch_pin: PA4

[printer]
kinematics: delta
max_velocity: 400 #max print speed ,default is 400mm/s
max_accel: 8000 
max_accel_to_decel: 5000  
square_corner_velocity: 5 
max_z_velocity: 400 
#delta_radius: 161.75 # delta radius,default is 161.75
print_radius: 152 #max printable radius 150,set it to 152 to avoid error "out of range"
minimum_z_position: -5 #min z position nozzle won't go to the position which Z lower the vaule
################################################################################################################
#calibrate and bed_mesh
################################################################################################################

[delta_calibrate]
radius: 148
horizontal_move_z: 23 #This value is related to the lift height of the nozzle during delta_calibrate
Speed: 50

[probe]  
pin: !PA11
x_offset: 0 
y_offset: 0 
#z_offset: 16 #the distance between nozzle and level switch
speed: 10  
samples: 3 #probe one point three times get an average
samples_result: average  
sample_retract_dist: 3 
samples_tolerance: 0.02 # precision
samples_tolerance_retries: 5 

[bed_mesh]  
speed: 50 
horizontal_move_z: 23 #This value is related to the lift height of the nozzle during bed_mesh
mesh_radius: 148  
mesh_origin: 0,0  
round_probe_count: 7 # 7*7
algorithm: bicubic
#############################################################################################################
#GCODE
#############################################################################################################

[gcode_macro led_on]
gcode:
  SET_PIN PIN=LED_pin VALUE=1

[gcode_macro led_off]
gcode:
  SET_PIN PIN=LED_pin VALUE=0

[gcode_macro logo_on]
gcode:
  SET_PIN PIN=LED_logo VALUE=1

[gcode_macro logo_off]
gcode:
  SET_PIN PIN=LED_logo VALUE=0

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1

[gcode_macro ZDOWN]
gcode:
   SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

[gcode_macro bed_level_1]
gcode:
  SET_GCODE_OFFSET Z=0
  G28
  delta_calibrate
  G1 X0 Y0 Z50 F4200
  G28
  save_config

[gcode_macro bed_level_2]
gcode:
  G28
  G1 X0 Y0 Z50 F4200
  bed_mesh_calibrate
  G1 X0 Y0 Z50 F4200
  G28
  save_config

[gcode_macro UNLOAD_FILAMENT] #unload filament
gcode:
    G91
#    G1 E10 F300
    G1 E-100 F800
    G90

[gcode_macro LOAD_FILAMENT] #load filament
gcode:
    G91
    G1 E50 F800
    G1 E30 F300
    G90
    

[gcode_macro M600]
gcode:
  PAUSE
  

[gcode_macro TMC]
gcode:
  DUMP_TMC STEPPER=stepper_a
  DUMP_TMC STEPPER=stepper_b
  DUMP_TMC STEPPER=stepper_c
  DUMP_TMC STEPPER=extruder
  

[gcode_macro save_time]
gcode:
    {% if printer.save_variables.variables.total_time %}
        {% set print_time = printer.save_variables.variables.total_time %}
    {% else %} 
        {% set print_time = 0 %}
    {% endif %}
    {% set print_time = print_time + printer.print_stats.print_duration/3600 %}
    SAVE_VARIABLE VARIABLE=total_time VALUE={print_time}

[gcode_macro SET_GCODE_OFFSET]  
rename_existing: _SET_GCODE_OFFSET
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    
    _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
    {% endif %}
    SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:  
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}
        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}|

[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 172800
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

[pause_resume]

[gcode_macro PAUSE] 
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}      #edit to your park position
    {% set y = params.Y|default(-140) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]  
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% if printer["filament_switch_sensor filament_sensor"].filament_detected == True %} # detect if occur filament runout ,True : filament exists.  False:filament runout
      {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
      {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
      {% endif %}
    ##### end of definitions #####
      G91
      {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %}   
      RESUME_BASE {get_params}
    {% endif %} 

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  M106 S0
  TURN_OFF_HEATERS
  M140 S0
  CANCEL_PRINT_BASE
  G28

[save_variables]
filename: ~/savedVariables.cfg

[verify_heater extruder]
max_error: 500
hysteresis: 20

[gcode_arcs]
resolution: 1.0 #Load the camera recording function

[exclude_object]

#####################################################################
#      Temperature sensors
#####################################################################

[temperature_sensor host]
sensor_type: temperature_host

[temperature_sensor mcu]
sensor_type: temperature_mcu

############################################################################################################################
############################################################################################################################
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [printer]
#*# delta_radius = 161.75
#*#
#*# [stepper_a]
#*# angle = 210.0
#*# arm_length = 342.930000
#*# position_endstop = 423.547811
#*#
#*# [stepper_b]
#*# angle = 330.0
#*# arm_length = 342.930000
#*# position_endstop = 423.850518
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 342.940000
#*# position_endstop = 423.917330
#*#
#*# [probe]
#*# z_offset = 19.550
#*#
#*# [delta_calibrate]
#*# height0 = 21.85
#*# height0_pos = 32134.000,32159.667,32164.333
#*# height1 = 21.85
#*# height1_pos = 38635.667,38661.000,28979.667
#*# height2 = 21.85
#*# height2_pos = 31671.333,42390.667,31701.667
#*# height3 = 21.85
#*# height3_pos = 29048.667,37551.000,37555.000
#*# height4 = 21.85
#*# height4_pos = 31357.000,31383.000,38983.333
#*# height5 = 21.85
#*# height5_pos = 36537.333,29216.000,36568.000
#*# height6 = 21.85
#*# height6_pos = 40495.000,31482.667,31487.333
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  1.788237, 1.788237, 1.788237, 1.788237, 1.788237, 1.788237, 1.788237
#*# 	  2.101517, 2.101517, 2.072080, 2.076135, 2.024317, 1.995657, 1.995657
#*# 	  2.072221, 2.072221, 2.093090, 2.185777, 2.233629, 2.262072, 2.262072
#*# 	  1.914056, 2.062471, 2.122224, 2.176053, 2.209918, 2.201940, 2.250590
#*# 	  1.870343, 1.870343, 1.974454, 2.137497, 2.296246, 2.338754, 2.338754
#*# 	  1.695781, 1.695781, 1.861981, 2.091826, 2.170851, 2.209229, 2.209229
#*# 	  2.031272, 2.031272, 2.031272, 2.031272, 2.031272, 2.031272, 2.031272
#*# tension = 0.2
#*# min_x = -147.99
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = -147.99
#*# x_count = 7
#*# max_y = 147.98
#*# mesh_x_pps = 2
#*# max_x = 147.99
